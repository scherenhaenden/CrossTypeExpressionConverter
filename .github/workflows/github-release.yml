name: Release Artifacts

on:
  push:
    branches:
      - 'version/**'
      - '**'
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version
        id: vars
        run: |
          ref="${GITHUB_REF}"
          if [[ "$ref" == refs/heads/version/* ]]; then
            version="${ref#refs/heads/version/}"
          elif [[ "$ref" == refs/tags/v* ]]; then
            version="${ref#refs/tags/v}"
          else
            echo "Unexpected ref: $ref" >&2
            exit 1
          fi
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "VERSION=$version" >> "$GITHUB_ENV"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          include-prerelease: true

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build CrossTypeExpressionConverter/CrossTypeExpressionConverter.csproj -c Release --no-restore

      - name: Pack
        run: dotnet pack CrossTypeExpressionConverter/CrossTypeExpressionConverter.csproj -c Release --no-build -o package

      - name: Create sources archive
        run: git archive --format zip --output sources.zip HEAD

      - name: Package DLL
        run: |
          zip CrossTypeExpressionConverter-${{ steps.vars.outputs.version }}-dll.zip CrossTypeExpressionConverter/bin/Release/net8.0/CrossTypeExpressionConverter.dll

      - name: Upload DLL artifact
        uses: actions/upload-artifact@v4
        with:
          name: CrossTypeExpressionConverter-${{ steps.vars.outputs.version }}-dll
          path: CrossTypeExpressionConverter-${{ steps.vars.outputs.version }}-dll.zip

      - name: Upload source archive
        uses: actions/upload-artifact@v4
        with:
          name: sources-${{ steps.vars.outputs.version }}
          path: sources.zip

      - name: Upload NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ steps.vars.outputs.version }}
          path: package/*.nupkg

      - name: Create tag
        if: startsWith(github.ref, 'refs/heads/version/')
        run: |
          git config user.name github-actions
          git config user.email github-actions@users.noreply.github.com
          git tag -a "v${{ steps.vars.outputs.version }}" -m "Release ${{ steps.vars.outputs.version }}"
          git push origin "v${{ steps.vars.outputs.version }}"

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.vars.outputs.version }}
          name: Release ${{ steps.vars.outputs.version }}
          files: |
            CrossTypeExpressionConverter-${{ steps.vars.outputs.version }}-dll.zip
            package/*.nupkg
            sources.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}